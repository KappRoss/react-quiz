{"version":3,"sources":["containers/Quiz/Quiz.module.css","components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Backdrop/Backdrop.module.css","hoc/Layout/Layout.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","components/Navigation/MenuToggle/MenuToggle.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Backdrop","props","className","classes","onClick","links","Drawer","map","link","index","cls","this","isOpen","push","close","Fragment","join","renderLinks","onClose","Component","MenuToggle","open","onToggle","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","React","AnswerItem","answerState","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Quiz","activeQuestion","isFinished","rightAnswerId","onAnswerClickHendler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","console","log","QuizWrapper","Header","Timer","currentTime","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83d543cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3X_sf\",\"QuizWrapper\":\"Quiz_QuizWrapper__3vLHX\",\"Header\":\"Quiz_Header__14YQV\",\"Timer\":\"Quiz_Timer__11LN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3Ix52\",\"close\":\"Drawer_close__1hOg-\",\"active\":\"Drawer_active__1eT7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3obZh\",\"open\":\"MenuToggle_open__1LPUm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__vGQex\",\"Question\":\"ActiveQuiz_Question__Z7hlk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__2PjRY\",\"succes\":\"AnswerItem_succes__2ZMEN\",\"error\":\"AnswerItem_error__3ox5Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3PoeL\",\"disabled\":\"Button_disabled__2LHrG\",\"error\":\"Button_error__3oz_p\",\"succes\":\"Button_succes__3Ttm_\",\"primary\":\"Button_primary__2ebpH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1QXqr\",\"succes\":\"FinishedQuiz_succes__1gg2g\",\"error\":\"FinishedQuiz_error__3JktM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2AMtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__OBs9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3JL60\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = props => <div className = {classes.Backdrop} onClick = {props.onClick}></div>\r\n\r\nexport default Backdrop;","import React, {Component} from 'react';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport classes from './Drawer.module.css';\r\n\r\nconst links = [\r\n  1,2,3\r\n]\r\n\r\nclass Drawer extends Component {\r\n\r\n  renderLinks(){\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key = {index}>\r\n          \r\n          <a>Link {link}</a>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const cls = [classes.Drawer]\r\n\r\n    if(!this.props.isOpen){\r\n      cls.push(classes.close)\r\n    }\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <nav className = {cls.join(' ')}>\r\n          <ul>\r\n            {this.renderLinks()}\r\n          </ul>\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n      </React.Fragment>\r\n      \r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Drawer;","import React from 'react';\r\nimport classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [\r\n    classes.MenuToggle,\r\n    'fa'\r\n  ]\r\n\r\n  if(props.isOpen){\r\n    cls.push('fa-times')\r\n    cls.push(classes.open)\r\n  }\r\n  else{\r\n    cls.push('fa-bars')\r\n  }\r\n\r\n  return (\r\n    <i\r\n      className = {cls.join(' ')}\r\n      onClick = {props.onToggle}\r\n    >\r\n\r\n    </i>\r\n  )\r\n}\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\r\nimport classes from './Layout.module.css';\r\n\r\nclass Layout extends React.Component{\r\n\r\n  state = {\r\n    menu: false\r\n  }\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    })\r\n  }\r\n  menuCloseHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <div className = {classes.Layout}>\r\n\r\n        <Drawer\r\n          isOpen = {this.state.menu}\r\n          onClose = {this.menuCloseHandler}\r\n        />\r\n\r\n        <MenuToggle \r\n          onToggle = {this.toggleMenuHandler}\r\n          isOpen = {this.state.menu}\r\n        />\r\n\r\n        <main>\r\n          {this.props.children}\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n\r\n  const cls = [classes.AnswerItem]\r\n\r\n  if (props.answerState){\r\n    cls.push(classes[props.answerState])\r\n  }\r\n\r\n  return (\r\n      <li \r\n        className = {cls.join(' ')}\r\n        onClick = {() => props.onAnswerClick(props.answer.id)}\r\n      >\r\n        {props.answer.text}\r\n      </li>\r\n  )\r\n}\r\n \r\nexport default AnswerItem;","import React from 'react';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\nimport classes from \"./AnswersList.module.css\";\r\n\r\nconst AnswersList = props => {\r\n  return (\r\n    <ul className = {classes.AnswersList}>\r\n      {props.answers.map((answer, index) => {\r\n        return (\r\n          <AnswerItem \r\n            key = {index}\r\n            answer = {answer}\r\n            onAnswerClick = {props.onAnswerClick}\r\n            answerState = {props.answerState ? props.answerState[answer.id] : null}\r\n          />\r\n          )\r\n        }\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\n\r\nconst ActiveQuiz = props => {\r\n  return (\r\n    <div className = {classes.ActiveQuiz}>\r\n      <p className = {classes.Question}>\r\n        <span>\r\n          <strong>{props.answerNumber}.</strong>&nbsp;\r\n          {props.question}\r\n        </span>\r\n  <small>{props.answerNumber} out of {props.quizLength}</small>\r\n      </p>\r\n      <AnswersList \r\n        answerState = {props.answerState}\r\n        answers = {props.answers}\r\n        onAnswerClick = {props.onAnswerClick}\r\n      /> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n  const cls = [\r\n    classes.Button,\r\n    classes[props.type]\r\n  ]\r\n\r\n  return(\r\n    <button\r\n      onClick = {props.onClick}\r\n      className = {cls.join(' ')}\r\n      disabled = {props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../UI/Button/Button';\r\nimport classes from './FinishedQuiz.module.css';\r\n\r\nconst FinishedQuiz = props => {\r\n\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if(props.results[key] === 'succes'){\r\n      total++\r\n    }\r\n    return total\r\n  }, 0)\r\n\r\n  return (\r\n    <div className = {classes.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index)=>{\r\n\r\n          const cls = [\r\n            'fa',\r\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n            classes[props.results[quizItem.id]]\r\n          ]\r\n          \r\n          return(\r\n            <li key = {index}>\r\n            <strong>{index + 1}</strong>.&nbsp;\r\n            {quizItem.question}\r\n            <i className = {cls.join(' ') }/>\r\n          </li>\r\n          )\r\n          \r\n        })}\r\n      </ul>\r\n\r\n      <p>Correct answers: {successCount} out of {props.quiz.length}</p>\r\n      \r\n      \r\n        <Button \r\n          onClick = {props.onRetry}\r\n          type = 'primary'\r\n        >Repeat</Button>\r\n\r\n        <Button\r\n          type = 'succes'\r\n        >go to list of tests</Button>\r\n      \r\n     \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FinishedQuiz;","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\n\r\nclass Quiz extends Component {\r\n  // constructor(props){\r\n  //   super(props)\r\n  //   this.launchClock()\r\n  //   this.state = {\r\n  //     currentTime: new Date().toLocaleString(),\r\n  //     activeQuestion: 0 ,\r\n  //     quiz: {\r\n  //       question: 'What color is the sky?',\r\n  //       rightAnswerId: 2,\r\n  //       answers: [\r\n  //         {text: 'red', id: 1},\r\n  //         {text: 'blue', id: 2},\r\n  //         {text: 'green', id: 3},\r\n  //         {text: 'white', id: 4}\r\n  //       ]\r\n  //     }\r\n  //   }\r\n  // }\r\n  // launchClock(){\r\n  //   setInterval(() => {\r\n  //     this.setState({\r\n  //       currentTime: new Date().toLocaleString()\r\n  //     })\r\n  //   }, 1000)\r\n  // }\r\n\r\n  state = {\r\n    results: {},\r\n    activeQuestion: 0,\r\n    isFinished: false,\r\n    answerState: null,\r\n    quiz: [\r\n    {\r\n      id: 1,\r\n      question: 'What color is the sky?',\r\n      rightAnswerId: 2,\r\n      answers: [\r\n        {text: 'red', id: 1},\r\n        {text: 'blue', id: 2},\r\n        {text: 'green', id: 3},\r\n        {text: 'white', id: 4}\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      question: 'What is the capital of Ukraine?',\r\n      rightAnswerId: 4,\r\n      answers: [\r\n        {text: 'Lviv', id: 1},\r\n        {text: 'Odessa', id: 2},\r\n        {text: 'Kharkiv', id: 3},\r\n        {text: 'Kiev', id: 4}\r\n      ]\r\n    }\r\n    ]\r\n  }\r\n\r\n  onAnswerClickHendler = (answerId) => {\r\n    // fix many clicks\r\n    if(this.state.answerState){\r\n      const key = Object.keys(this.state.answerState)[0]\r\n      if (this.state.answerState[key] === 'succes'){\r\n        return\r\n      }\r\n    }\r\n    //\r\n    \r\n    \r\n    const question = this.state.quiz[this.state.activeQuestion];\r\n    const results = this.state.results;\r\n\r\n    if (question.rightAnswerId === answerId){\r\n      if(!results[question.id]){\r\n        results[question.id] = 'succes'\r\n      }\r\n\r\n      this.setState({\r\n        answerState: {[answerId]: 'succes'},\r\n        results\r\n      })\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (this.isQuizFinished()){\r\n          this.setState({\r\n            isFinished: true\r\n          })\r\n        }\r\n        else{\r\n          this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1,\r\n            answerState: null\r\n          })\r\n        }\r\n        window.clearTimeout(timeout);\r\n      }, 1000)\r\n    }\r\n    else{\r\n      results[question.id] = 'error' \r\n      this.setState({\r\n        answerState: {[answerId]: 'error'},\r\n        results\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  isQuizFinished(){\r\n    return this.state.activeQuestion + 1 === this.state.quiz.length\r\n  }\r\n\r\n  retryHandler = () => {\r\n    this.setState({\r\n      activeQuestion: 0,\r\n      answerState: null,\r\n      isFinished: false,\r\n      results: {}\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log('render' , this.state);\r\n    return(\r\n      <div className = {classes.Quiz}>\r\n        <div className = {classes.QuizWrapper}>\r\n          <div className = {classes.Header}>\r\n            <h1>Quiz</h1>\r\n            <div className = {classes.Timer}>{this.state.currentTime}</div>\r\n          </div>\r\n            {\r\n              this.state.isFinished \r\n              ? <FinishedQuiz\r\n                  results = {this.state.results}\r\n                  quiz = {this.state.quiz}\r\n                  onRetry = {this.retryHandler}\r\n                /> \r\n              : <ActiveQuiz \r\n                  onAnswerClick = {this.onAnswerClickHendler}\r\n                  question = {this.state.quiz[this.state.activeQuestion].question}\r\n                  answers = {this.state.quiz[this.state.activeQuestion].answers}\r\n                  quizLength = {this.state.quiz.length}\r\n                  answerNumber = {this.state.activeQuestion + 1}\r\n                  answerState = {this.state.answerState}\r\n                />\r\n            }\r\n          \r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Quiz;","import Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz';\n\nfunction App() {\n  return (\n    <Layout>\n      <Quiz/>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}